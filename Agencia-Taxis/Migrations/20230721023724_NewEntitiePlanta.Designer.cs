// <auto-generated />
using System;
using Agencia_Taxis;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Agencia_Taxis.Migrations
{
    [DbContext(typeof(AgenciaDbContext))]
    [Migration("20230721023724_NewEntitiePlanta")]
    partial class NewEntitiePlanta
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Agencia_Taxis.Entities.Choferes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroLicencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Choferes");
                });

            modelBuilder.Entity("Agencia_Taxis.Entities.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Encargado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EspaciosDisponibles")
                        .HasColumnType("int");

                    b.Property<int>("EspaciosTotales")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumeroAfiliacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Planta");
                });

            modelBuilder.Entity("Agencia_Taxis.Entities.Taxis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroPlaca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantaId");

                    b.ToTable("Taxis");
                });

            modelBuilder.Entity("ChoferesTaxis", b =>
                {
                    b.Property<int>("ChoferesId")
                        .HasColumnType("int");

                    b.Property<int>("TaxisId")
                        .HasColumnType("int");

                    b.HasKey("ChoferesId", "TaxisId");

                    b.HasIndex("TaxisId");

                    b.ToTable("ChoferesTaxis");
                });

            modelBuilder.Entity("Agencia_Taxis.Entities.Taxis", b =>
                {
                    b.HasOne("Agencia_Taxis.Entities.Planta", "Planta")
                        .WithMany("Taxis")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planta");
                });

            modelBuilder.Entity("ChoferesTaxis", b =>
                {
                    b.HasOne("Agencia_Taxis.Entities.Choferes", null)
                        .WithMany()
                        .HasForeignKey("ChoferesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agencia_Taxis.Entities.Taxis", null)
                        .WithMany()
                        .HasForeignKey("TaxisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agencia_Taxis.Entities.Planta", b =>
                {
                    b.Navigation("Taxis");
                });
#pragma warning restore 612, 618
        }
    }
}
